logging:
    level:
        taco: INFO

taco:
    orders:
        pageSize: 10
    messaging:
        destinations:
            orders: tacocloud.orders.dest

spring:
    profiles:
        active: 
        - prod
    jpa:
        show-sql: true

---
spring:
    profiles: dev

    thymeleaf:
        cache: false

    jpa:
        hibernate:
            ddl-auto: update
        generate-ddl: true
        database: h2

    sql:
        init:
            schema-locations:
            - classpath:schema.sql
            data-locations:
            - classpath:data.sql
    artemis:
        broker-url: tcp://localhost:61617
        user: tacoweb
        password: 123456

    jms:
        template: 
            default-destination: ${taco.messaging.destinations.orders}
            
    rabbitmq:
        host: localhost
        port: 5672
        username: full_access
        password: 123456
        template:
            receive-timeout: 10000
    kafka:
        bootstrap-servers:
            - localhost:9092
        template:
            default-topic: ${taco.messaging.destinations.orders}
taco:
    orders:
        pageSize: 15
        
    email:
        host: imap.gmail.com
        mailbox: INBOX
        username: nruslanr95
        password: Brainsort123
        poll-rate: 10000

server:
    port: 8081
---
spring:
    profiles: prod

    application: 
        name: tacocloud-service

    thymeleaf:
        cache: true

    datasource:
        driver-class-name: org.postgresql.Driver
        url: jdbc:postgresql://localhost:5432/tacos
        username: taco_user
        password: 123456
    
    jpa:
        hibernate:
            ddl-auto: validate
        database: postgresql
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        show-sql: true
        generate-ddl: false

    data:
        rest:
            base-path: /api/v2

        mongodb:
            host: localhost
            port: 27017
            username: taco_user
            password: 123456
            database: tacocloud 

    rabbitmq:
        host: localhost
        port: 5672
        username: full_access
        password: 123456
        template:
            receive-timeout: 10000
    kafka:
        bootstrap-servers:
            - localhost:9092
            
        template:
            default-topic: ${taco.messaging.destinations.orders}

    cloud:
        config:
            enabled: true
            import-check:
                enabled: false

    boot:
        admin:
            client:
                url: http://localhost:9090

    eureka:
        instance:
            metadata-map:
                user.name: ruslan
                user.password: 123456

        client:
            service-url:
                defaultZone: http://localhost:8761/eureka

    jmx:
        enabled: true
         
management:
    endpoint:
        health: 
            show-details: always
            
    endpoints:
        web:
            base-path: /monitor
            exposure:
                include: '*'
                exclude:
                    - heapdump
        jmx:
            exposure:
                include: '*'
                
    info:
        application:
            name: ${spring.application.name}
            description: Training Web Application for Spring Boot learning
        
        git:
            mode: full

    #config:
    #    import: "configserver: http://localhost:8888"

server:
    host: localhost
    port: 8081
    
logging:
    level:
        tacos: WARN

taco:
    orders:
        pageSize: 15
        
    email:
        host: imap.gmail.com
        mailbox: INBOX
        username: nruslanr95
        password: Brainsort123
        poll-rate: 10000

